{"ast":null,"code":"var _jsxFileName = \"/Users/felipehoffmann/desenv/workspaces/workspace_gostack/modulo09/src/pages/Dashboard/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport { format, subDays, addDays } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport api from \"../../services/api\";\nimport { Container, Time } from './styles';\nexport default function Dashboard() {\n  const [date, setDate] = useState(new Date());\n  const dateFormatted = useMemo(() => format(date, \"d 'de' MMMM\", {\n    locale: pt\n  }), [date]);\n\n  function handlePrevDay() {\n    setDate(subDays(date, 1));\n  }\n\n  function handleNextDay() {\n    setDate(subDays(date, 1));\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(MdChevronLeft, {\n    size: 36,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, dateFormatted), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(MdChevronRight, {\n    size: 36,\n    color: \"#fff\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Time, {\n    past: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"08:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Felipe Hoffmann\")), React.createElement(Time, {\n    available: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"09:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Em aberto\")), React.createElement(Time, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"10:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Felipe Hoffmann\")), React.createElement(Time, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"11:00\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Felipe Hoffmann\"))));\n}","map":{"version":3,"sources":["/Users/felipehoffmann/desenv/workspaces/workspace_gostack/modulo09/src/pages/Dashboard/index.js"],"names":["React","useState","useMemo","format","subDays","addDays","pt","MdChevronLeft","MdChevronRight","api","Container","Time","Dashboard","date","setDate","Date","dateFormatted","locale","handlePrevDay","handleNextDay"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,OAA1B,QAAyC,OAAzC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAyC,UAAzC;AACA,OAAOC,EAAP,MAAe,oBAAf;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,gBAA9C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,UAAhC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,IAAIc,IAAJ,EAAD,CAAhC;AAEA,QAAMC,aAAa,GAAGd,OAAO,CAC3B,MAAMC,MAAM,CAACU,IAAD,EAAO,aAAP,EAAsB;AAAEI,IAAAA,MAAM,EAAEX;AAAV,GAAtB,CADe,EAE3B,CAACO,IAAD,CAF2B,CAA7B;;AAKA,WAASK,aAAT,GAAyB;AACvBJ,IAAAA,OAAO,CAACV,OAAO,CAACS,IAAD,EAAO,CAAP,CAAR,CAAP;AACD;;AAED,WAASM,aAAT,GAAyB;AACvBL,IAAAA,OAAO,CAACV,OAAO,CAACS,IAAD,EAAO,CAAP,CAAR,CAAP;AACD;;AAED,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAE,EAArB;AAAyB,IAAA,KAAK,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASG,aAAT,CAJF,EAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAE,EAAtB;AAA0B,IAAA,KAAK,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,EAKE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CALF,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CATF,EAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CAbF,CAXF,CADF;AAgCD","sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { format, subDays, addDays } from 'date-fns';\nimport pt from 'date-fns/locale/pt';\nimport { MdChevronLeft, MdChevronRight } from 'react-icons/md';\nimport api from '~/services/api';\n\nimport { Container, Time } from './styles';\n\nexport default function Dashboard() {\n  const [date, setDate] = useState(new Date());\n\n  const dateFormatted = useMemo(\n    () => format(date, \"d 'de' MMMM\", { locale: pt }),\n    [date]\n  );\n\n  function handlePrevDay() {\n    setDate(subDays(date, 1));\n  }\n\n  function handleNextDay() {\n    setDate(subDays(date, 1));\n  }\n\n  return (\n    <Container>\n      <header>\n        <button type=\"button\">\n          <MdChevronLeft size={36} color=\"#fff\" />\n        </button>\n        <strong>{dateFormatted}</strong>\n        <button type=\"button\">\n          <MdChevronRight size={36} color=\"#fff\" />\n        </button>\n      </header>\n\n      <ul>\n        <Time past>\n          <strong>08:00</strong>\n          <span>Felipe Hoffmann</span>\n        </Time>\n        <Time available>\n          <strong>09:00</strong>\n          <span>Em aberto</span>\n        </Time>\n        <Time>\n          <strong>10:00</strong>\n          <span>Felipe Hoffmann</span>\n        </Time>\n        <Time>\n          <strong>11:00</strong>\n          <span>Felipe Hoffmann</span>\n        </Time>\n      </ul>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}